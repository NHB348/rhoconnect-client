require 'fileutils'


def build_extension(name, arch, src_files)
  objects = []
  mkdir_p $tempdir unless File.exists? $tempdir

  #Dir.glob("*.c").each do |f|
  src_files.each do |f|
    objname = File.join( $tempdir, File.basename( f.gsub(/\.c$/, '.o') ) )
    objects << ('"'+objname+'"')

    args = []
    args << "-I."
    args << "-I\"#{$rootdir}/platform/android/Rhodes/jni/include\""
    args << "-I\"#{$rootdir}/platform/shared/ruby/include\""
    args << "-I\"#{$rootdir}/platform/shared\""
    args << "-I\"#{$rootdir}/platform/shared/common\""
    args << "-I\"#{$rootdir}/platform/shared/sync\""
    args << "-I\"#{$rootdir}/platform/shared/rubyext\""
    args << "-I\"#{$rootdir}/lib/commonAPI/coreapi/ext/shared\""

    args << "-I\"#{$rootdir}/platform/shared/ruby/android\""
    args << "-I\"#{$rootdir}/platform/shared/ruby/generated\""

    args << "-I\"#{$rhoconnectclientdir}/ext/shared\""

    cc_compile f, $tempdir, args or exit 1

  end

  mkdir_p $targetdir unless File.exist? $targetdir

  cc_ar File.join($targetdir, 'lib' + name + '.a'), Dir.glob($tempdir + "/**/*.o") or exit 1

end

namespace "build" do
  task :config do
    curdir = pwd
    $rhoconnectclientdir = curdir.gsub('/ext/platform/android','');
    $targetdir = ENV['TARGET_TEMP_DIR']
    raise "TARGET_TEMP_DIR is not set" if $targetdir.nil?
    $tempdir = ENV['TEMP_FILES_DIR']
    raise "TEMP_FILES_DIR is not set" if $tempdir.nil?
    $rootdir = ENV['RHO_ROOT']
    raise "RHO_ROOT is not set" if $rootdir.nil?

    require File.join($rootdir, 'platform/android/build/androidcommon.rb')

    setup_ndk(ENV['ANDROID_NDK'],ENV['ANDROID_API_LEVEL'])

  end

  task :all => :config do

    src_files = []

	  src_files << $rhoconnectclientdir + '/ext/shared/rhoconnectclient.c'
	  src_files << $rhoconnectclientdir + '/ext/shared/initRhoconnectClient.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/sync/ClientRegister.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/sync/SyncEngine.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/sync/SyncNotify.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/sync/SyncSource.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/sync/SyncThread.cpp'
	  
	  src_files << $rhoconnectclientdir + '/ext/shared/RhoConnectClientImpl.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/rhoconnectclient_api_init.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/rhoconnectclient_js_api.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/rhoconnectclient_ruby_api.c'
	  
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/cpp/RhoConnectClient_js_wrap.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/cpp/RhoConnectClient_ruby_wrap.cpp'
	  src_files << $rhoconnectclientdir + '/ext/shared/generated/cpp/RhoConnectClientBase.cpp'
    # build native part
    build_extension('Rhoconnect-client', $arch, src_files)

    # java part will be builded automatically (java files should be listed in ext_build.files ans ext. yml should be configured)

  end
end

task :default => "build:all"
